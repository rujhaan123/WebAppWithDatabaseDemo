trigger:
  branches:
    include:
      - '*'

pr:
  branches:
    include:
      - master

pool:
  vmImage: 'windows-2019'
  
parameters:
- name: runCompletePipeline
  displayName: Run All Tasks ?
  type: boolean
  default: true

variables:
  BuildConfiguration: 'Release'
  ConnectedServiceName: '41ee97a2-4cba-49cf-8f61-ec4fb9d572aa'
  ResourceGroupName: 'Integration1'
  Database.Admin: 'rujhaan1'
  Database.Password: '@Aa123456' # to be secured in Key Vault
  Database.Name: 'EmployeesDB'
  WebAppKind: 'webApp'
  WebAppName: 'rbtestnet'
  WebAppNameUrl: 'rbtestnet.azurewebsites.net'
  SqlServerName: '$(Prefix)-sql-$(Release.EnvironmentName)-$(UniqueId)'
  Prefix: 'rb'
  Release.EnvironmentName: 'dev'
  UniqueId: '1280' #'$(Build.BuildId)'
  hostingPlanName: '$(Prefix)-service-plan'

stages:
- stage: Build
  jobs:
  - job: BuildJob
    steps:
    - checkout: self
      fetchDepth: 0

    - task: UseDotNet@2
      displayName: 'Install .NET 6 SDK'
      inputs:
        packageType: 'sdk'
        version: '6.0.x'
        installationPath: $(Agent.ToolsDirectory)/dotnet

    - task: DotNetCoreCLI@2
      displayName: 'Restore NuGet Packages'
      inputs:
        command: 'restore'
        projects: '**/WebApp.csproj'  # Adjust if necessary
      
    - task: WhiteSource@21
      inputs:
        cwd: '$(System.DefaultWorkingDirectory)'
        projectName: 'IntegrationPipelines'
      continueOnError: true

    - task: PowerShell@2
      inputs:
        targetType: 'inline'
        script: |
          $paths = Get-ChildItem -include *.csproj -Recurse
          foreach($pathobject in $paths) 
          {
              $path = $pathobject.fullname
              $doc = New-Object System.Xml.XmlDocument
              $doc.Load($path)
              $child = $doc.CreateElement("ProjectGuid")
              $child.InnerText = [guid]::NewGuid().ToString().ToUpper()
              $node = $doc.SelectSingleNode("//Project/PropertyGroup")
              $node.AppendChild($child)
              $doc.Save($path)
          }
        workingDirectory: 'Webapp'

    - task: SonarCloudPrepare@2
      inputs:
        SonarCloud: 'Sonar'
        organization: 'sonarrbtestado'
        scannerMode: 'MSBuild'
        projectKey: 'rbd26400_IntegrationPipelines'
        projectName: 'IntegrationPipelines'
    
    - task: DotNetCoreCLI@2
      displayName: 'Build Web App'
      inputs:
        command: 'build'
        projects: '**/WebApp.csproj'
        arguments: '--configuration $(BuildConfiguration)'
  
    - task: DotNetCoreCLI@2
      displayName: 'Run Unit Tests'
      inputs:
        command: 'test'
        projects: '**/*UnitTest*.csproj'
        arguments: '--configuration $(BuildConfiguration)'

    - task: DotNetCoreCLI@2
      displayName: 'Create Web App Package (.zip)'
      inputs:
        command: 'publish'
        publishWebProjects: true
        arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
        zipAfterPublish: true
    
    - task: SonarCloudAnalyze@2
      displayName: 'Run Code Analysis'
      
    - task: SonarCloudPublish@2
      displayName: 'Publish Quality Gate Result'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact (WebApp.zip)'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        
  - job: Database
    displayName: Build Database
    pool:
      vmImage: 'windows-2019'
      demands: msbuild
    steps:

    - task: MSBuild@1
      displayName: Build WebApp.Database.sqlproj
      inputs:
        solution: WebApp.Database/WebApp.Database.sqlproj
        msbuildArguments: '/p:OutDir=$(Build.ArtifactStagingDirectory)'

    - task: PublishBuildArtifacts@1
      displayName: Publish Artifact (Dacpac)
      inputs:
        ArtifactName: dacpac

  - job: Selenium
    displayName: Build UI Tests
    pool:
      vmImage: 'windows-2019'
      demands: msbuild

    steps:
    - task: NuGetToolInstaller@0
      displayName: Use NuGet 4.3.0

    - task: NuGetCommand@2
      displayName: Restore NuGet Packages
      inputs:
        restoreSolution: WebAppWithDatabase.sln

    - task: MSBuild@1
      displayName: Build SeleniumUiTests.csproj
      inputs:
        solution: SeleniumUiTests/SeleniumUiTests.csproj
        msbuildArguments: '/p:OutDir=$(Build.ArtifactStagingDirectory)'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: UI-Test'
      inputs:
        ArtifactName: ui-tests

  - job: Infrastructure
    displayName: Publish Infra files
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    
    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: ARM templates'
      inputs:
        PathtoPublish: AzureResourceGroupDeployment
        ArtifactName: arm

- stage: CreateInfra
  dependsOn: Build
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'), ne(variables['Build.Reason'], 'PullRequest'))
  jobs:
  - job: Create_DEV
    displayName: Create DEV
    pool:
      vmImage: 'windows-2019'
    steps:

    - checkout: none
    - task: DownloadBuildArtifacts@0
      displayName: Download ARM templates
      inputs:
        artifactName: arm
        downloadPath: $(System.DefaultWorkingDirectory)

    - task: AzureResourceGroupDeployment@2
      displayName: Validate ARM templates
      enabled: ${{ parameters.runCompletePipeline }}
      inputs:
        azureSubscription: 'WebAppWithDatabaseDemo_spn'
        action: 'Create Or Update Resource Group'
        resourceGroupName: '$(ResourceGroupName)'
        location: 'West Europe'
        templateLocation: 'Linked artifact'
        csmFile: '$(System.DefaultWorkingDirectory)/arm/WebSiteSQLDatabase.json'
        csmParametersFile: '$(System.DefaultWorkingDirectory)/arm/WebSiteSQLDatabase.parameters.json'
        overrideParameters: '-hostingPlanName $(hostingPlanName) -skuName "F1" -skuCapacity 1 -administratorLogin $(Database.Admin) -administratorLoginPassword $(Database.Password) -databaseName $(Database.Name) -collation "SQL_Latin1_General_CP1_CI_AS" -edition "Basic" -maxSizeBytes "1073741824" -requestedServiceObjectiveName "Basic" -webSiteName $(WebAppName) -sqlserverName $(SqlServerName)'
        deploymentMode: 'Validation'

    - task: AzureCLI@2
      displayName: Preview Template Changes (What-If)
      inputs:
        workingDirectory: $(System.DefaultWorkingDirectory)/arm/
        azureSubscription: '$(ConnectedServiceName)'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: 'az deployment group what-if --resource-group $(ResourceGroupName) --name rollout01 --template-file  WebSiteSQLDatabase.json --parameters WebSiteSQLDatabase.parameters.json'
        arguments: '-hostingPlanName $(hostingPlanName) -skuName "F1" -skuCapacity 1 -administratorLogin $(Database.Admin) -administratorLoginPassword $(Database.Password) -databaseName $(Database.Name) -collation "SQL_Latin1_General_CP1_CI_AS" -edition "Basic" -maxSizeBytes "1073741824" -requestedServiceObjectiveName "Basic" -webSiteName $(WebAppName) -sqlserverName $(SqlServerName)'

    - task: AzureResourceManagerTemplateDeployment@3
      displayName: Deploy ARM templates
      inputs:
        deploymentScope: 'Resource Group'
        azureResourceManagerConnection: 'rbd26400-IntegrationPipelines-41ee97a2-4cba-49cf-8f61-ec4fb9d572aa'
        subscriptionId: '$(ConnectedServiceName)'
        action: 'Create Or Update Resource Group'
        resourceGroupName: '$(ResourceGroupName)'
        location: 'West Europe'
        templateLocation: 'Linked artifact'
        csmFile: '$(System.DefaultWorkingDirectory)/arm/WebSiteSQLDatabase.json'
        csmParametersFile: '$(System.DefaultWorkingDirectory)/arm/WebSiteSQLDatabase.parameters.json'
        overrideParameters: '-hostingPlanName $(hostingPlanName) -skuName "F1" -skuCapacity 1 -administratorLogin $(Database.Admin) -administratorLoginPassword $(Database.Password) -databaseName $(Database.Name) -collation "SQL_Latin1_General_CP1_CI_AS" -edition "Basic" -maxSizeBytes "1073741824" -requestedServiceObjectiveName "Basic" -webSiteName $(WebAppName) -sqlserverName $(SqlServerName)'
        deploymentMode: 'Incremental'

- stage: Deployment
  dependsOn: Build
  jobs:
  - job: DeployWebAppJob
    steps:
    - task: AzureRmWebAppDeployment@4
      displayName: 'Deploy Azure App Service'
      inputs:
        ConnectionType: 'AzureRM'
        azureSubscription: '$(ConnectedServiceName)'
        appType: 'webApp'
        WebAppName: '$(WebAppName)'
        packageForLinux: '$(Pipeline.Workspace)/drop/WebApp.zip'
